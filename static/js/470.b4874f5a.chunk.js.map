{"version":3,"file":"static/js/470.b4874f5a.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/ForgotPasswordPage/ForgotPasswordPage.module.css?f1b2","webpack://react-homework-template/./src/components/ForgotPasswordForm/ForgotPasswordForm.module.css?0487","components/ForgotPasswordForm/ForgotPasswordForm.jsx","pages/ForgotPasswordPage/ForgotPasswordPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ForgotPasswordPage_container__Z-X75\",\"title\":\"ForgotPasswordPage_title__OcH8+\",\"icon\":\"ForgotPasswordPage_icon__e0nN9\"};","// extracted by mini-css-extract-plugin\nexport default {\"block\":\"ForgotPasswordForm_block__d7+WJ\",\"form\":\"ForgotPasswordForm_form__ztdlt\",\"text\":\"ForgotPasswordForm_text__x7KMY\",\"status\":\"ForgotPasswordForm_status__hXuPA\",\"error\":\"ForgotPasswordForm_error__ZT9jC\",\"btn\":\"ForgotPasswordForm_btn__EZ6L-\",\"label\":\"ForgotPasswordForm_label__cdhNO\",\"formInput\":\"ForgotPasswordForm_formInput__K28es\",\"passInput\":\"ForgotPasswordForm_passInput__Kh3sS\",\"btnCont\":\"ForgotPasswordForm_btnCont__1xGiK\",\"passVisBtn\":\"ForgotPasswordForm_passVisBtn__LRrc5\",\"passBtnImg\":\"ForgotPasswordForm_passBtnImg__qnn7d\",\"errorMessage\":\"ForgotPasswordForm_errorMessage__cs7cj\"};","import s from './ForgotPasswordForm.module.css';\nimport eyeOpened from 'assets/icons/eye.svg';\nimport eyeClosed from 'assets/icons/eye-blocked.svg';\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { getEmailStatus, getKeyStatus } from 'redux/auth/auth-selector';\nconst ForgotPasswordForm = ({ handleSubmitEmail, handleSubmitKey, handleSubmitPassword }) => {\n  const emailStatus = useSelector(getEmailStatus);\n  const keyStatus = useSelector(getKeyStatus);\n\n  const [state, setState] = useState({\n    email: '',\n    key: '',\n    password: '',\n    repeatPassword: '',\n  });\n  const { email, key, password, repeatPassword } = state;\n  const [isPassShown, setIsPassShown] = useState(false);\n  const [isRepeatPassShown, setIsRepeatPassShown] = useState(false);\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setState(prevState => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n  const onSubmitEmail = e => {\n    e.preventDefault();\n    handleSubmitEmail(email);\n  };\n  const onSubmitKey = e => {\n    e.preventDefault();\n    handleSubmitKey(key);\n  };\n  const onSubmitPassword = e => {\n    e.preventDefault();\n    handleSubmitPassword(password);\n  };\n\n  const checkKeyDisabled = key.length !== 36;\n  const checkEmail =\n    email.length >= 8 && email.split('').includes('@') & email.split('').includes('.');\n  const checkPassLength = password.length >= 8;\n  const checkRepeatPassLength = repeatPassword.length >= 8;\n  const samePassword =\n    keyStatus && checkPassLength && checkRepeatPassLength && password !== repeatPassword;\n  return (\n    <>\n      <div className={s.block}>\n        {!emailStatus && <p className={s.text}>The activation key will be send to your email</p>}\n        <form onSubmit={onSubmitEmail} className={s.form}>\n          <input\n            onChange={handleChange}\n            className={s.formInput}\n            id=\"email\"\n            type=\"text\"\n            name=\"email\"\n            value={email}\n            required\n            min-length=\"8\"\n            placeholder=\"Enter email of your account\"\n            title=\"Please enter valid email address, for example 'example@gmail.com'\"\n          />\n          <button type=\"submit\" disabled={!checkEmail} className={s.btn}>\n            Send key\n          </button>\n        </form>\n        {emailStatus && <p className={s.status}>The activation key sent to your email</p>}\n      </div>\n      {emailStatus && (\n        <div className={s.block}>\n          <form onSubmit={onSubmitKey} className={s.form}>\n            <input\n              onChange={handleChange}\n              className={s.formInput}\n              id=\"key\"\n              type=\"text\"\n              name=\"key\"\n              value={key}\n              required\n              title=\"Please enter activation key (36 symbols) \"\n              placeholder=\"Enter activation key from email message\"\n            />\n            <button type=\"submit\" disabled={checkKeyDisabled} className={s.btn}>\n              Check key\n            </button>\n          </form>\n          {keyStatus && <p className={s.status}>The activation key approved</p>}\n        </div>\n      )}\n      {keyStatus && (\n        <div className={s.block}>\n          <form onSubmit={onSubmitPassword} className={s.form}>\n            <label className={s.label} htmlFor=\"password\">\n              <input\n                onChange={handleChange}\n                id=\"password\"\n                name=\"password\"\n                value={password}\n                className={s.formInput + ' ' + s.passInput}\n                type={isPassShown ? 'text' : 'password'}\n                title=\"Please enter your new password. Minimum length 8 symbols\"\n                placeholder=\"New password *\"\n                min-length=\"8\"\n                required\n              />\n              <button\n                className={s.passVisBtn}\n                onClick={() => {\n                  setIsPassShown(!isPassShown);\n                }}\n                type=\"button\"\n              >\n                <img\n                  className={s.pswdBtnImg}\n                  src={isPassShown ? eyeOpened : eyeClosed}\n                  alt=\"Button show/hide password\"\n                />\n              </button>\n            </label>\n            <label className={s.label} htmlFor=\"repeatPassword\">\n              <input\n                onChange={handleChange}\n                id=\"repeatPassword\"\n                name=\"repeatPassword\"\n                value={repeatPassword}\n                className={s.formInput + ' ' + s.passInput}\n                type={isRepeatPassShown ? 'text' : 'password'}\n                title=\"Please repeat your new password. Minimum length 8 symbols\"\n                placeholder=\"Repeat new password *\"\n                min-length=\"8\"\n                required\n              />\n              <button\n                className={s.passVisBtn}\n                onClick={() => {\n                  setIsRepeatPassShown(!isRepeatPassShown);\n                }}\n                type=\"button\"\n              >\n                <img\n                  className={s.pswdBtnImg}\n                  src={isRepeatPassShown ? eyeOpened : eyeClosed}\n                  alt=\"Button show/hide password\"\n                />\n              </button>\n            </label>\n\n            <button type=\"submit\" disabled={samePassword} className={s.btn}>\n              Save password\n            </button>\n          </form>\n          {samePassword && <p className={s.error}>Passwords are not the same. Check it</p>}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default ForgotPasswordForm;\n","import s from './ForgotPasswordPage.module.css';\nimport { ReactComponent as BackArrow } from 'assets/icons/back-arrow.svg';\nimport ForgotPasswordForm from 'components/ForgotPasswordForm/ForgotPasswordForm';\nimport { getLoadingStatus, gettEmailOnCheck, getPasswordStatus } from 'redux/auth/auth-selector';\nimport { useSelector } from 'react-redux';\nimport { Loader } from 'components';\nimport { useDispatch } from 'react-redux';\nimport { Link, Navigate } from 'react-router-dom';\nimport { getActivationKey, getKeyVerify, saveNewPassword } from 'redux/auth/auth-operations';\n\nconst ForgotPasswordPage = () => {\n  const passwordStatus = useSelector(getPasswordStatus);\n  const isLoading = useSelector(getLoadingStatus);\n  const emailOnCheck = useSelector(gettEmailOnCheck);\n\n  const dispatch = useDispatch();\n  const sendEmail = email => {\n    dispatch(getActivationKey(email));\n  };\n  const checkKeyStatus = key => {\n    dispatch(getKeyVerify(key));\n  };\n  const createNewPassword = password => {\n    dispatch(saveNewPassword({ password, email: emailOnCheck }));\n  };\n  return (\n    <main>\n      <div className={s.container}>\n        {isLoading ? (\n          <Loader />\n        ) : (\n          <>\n            <Link to=\"/login\">\n              <BackArrow className={s.icon} />\n            </Link>\n            <h3 className={s.title}>Forgot password</h3>\n            <ForgotPasswordForm\n              handleSubmitEmail={sendEmail}\n              handleSubmitKey={checkKeyStatus}\n              handleSubmitPassword={createNewPassword}\n            />\n          </>\n        )}\n      </div>\n      {passwordStatus && <Navigate to=\"/login\" />}\n    </main>\n  );\n};\n\nexport default ForgotPasswordPage;\n"],"names":["_ref","handleSubmitEmail","handleSubmitKey","handleSubmitPassword","emailStatus","useSelector","getEmailStatus","keyStatus","getKeyStatus","_useState","useState","email","key","password","repeatPassword","_useState2","_slicedToArray","state","setState","_useState3","_useState4","isPassShown","setIsPassShown","_useState5","_useState6","isRepeatPassShown","setIsRepeatPassShown","handleChange","e","_e$target","target","name","value","prevState","_objectSpread","_defineProperty","checkKeyDisabled","length","checkEmail","split","includes","checkPassLength","checkRepeatPassLength","samePassword","_jsxs","_Fragment","children","className","s","_jsx","onSubmit","preventDefault","onChange","id","type","required","placeholder","title","disabled","htmlFor","onClick","src","eyeOpened","eyeClosed","alt","passwordStatus","getPasswordStatus","isLoading","getLoadingStatus","emailOnCheck","gettEmailOnCheck","dispatch","useDispatch","Loader","Link","to","BackArrow","ForgotPasswordForm","getActivationKey","getKeyVerify","saveNewPassword","Navigate"],"sourceRoot":""}
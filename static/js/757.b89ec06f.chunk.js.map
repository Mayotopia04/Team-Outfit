{"version":3,"file":"static/js/757.b89ec06f.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/RegistrationPage/RegistrationPage.module.css?b753","webpack://react-homework-template/./src/components/RegistrationForm/RegistrationForm.module.css?5637","components/RegistrationForm/RegistrationForm.js","pages/RegistrationPage/RegistrationPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"RegistrationPage_container__o9QxY\",\"title\":\"RegistrationPage_title__pXe0V\",\"text\":\"RegistrationPage_text__fWsu9\",\"infoContainer\":\"RegistrationPage_infoContainer__4Qzr7\",\"block\":\"RegistrationPage_block__CFZqZ\"};","// extracted by mini-css-extract-plugin\nexport default {\"loginForm\":\"RegistrationForm_loginForm__PNfPw\",\"googleBtn\":\"RegistrationForm_googleBtn__32hWw\",\"formInput\":\"RegistrationForm_formInput__m+H0J\",\"passInput\":\"RegistrationForm_passInput__m655N\",\"btnCont\":\"RegistrationForm_btnCont__GcnzE\",\"pswdVisBtn\":\"RegistrationForm_pswdVisBtn__lIwYN\",\"pswdBtnImg\":\"RegistrationForm_pswdBtnImg__ZD7sr\",\"errorMessage\":\"RegistrationForm_errorMessage__I5ZMQ\"};","// import GoogleLogo from '../../assets/icons/googleLogo.svg';\n// import FacebookText from '../../assets/icons/facebookText.svg';\nimport eyeOpened from '../../assets/icons/eye.svg';\nimport eyeClosed from '../../assets/icons/eye-blocked.svg';\nimport { Button } from 'components';\nimport s from './RegistrationForm.module.css';\nimport { useDispatch } from 'react-redux';\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { useState } from 'react';\nimport { handleRegistration } from '../../redux/auth/auth-operations';\n\n// const { REACT_APP_BACKEND_URL = 'http://localhost:4000/api' } = process.env;\n\nconst SignupSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Name length must be at least 2 characters long')\n    .required('Name is required'),\n  email: Yup.string().email('Invalid email').required('Email is required'),\n  password: Yup.string()\n    .min(6, 'Password must contain 6 or more characters!')\n    .required('Password is required'),\n});\n\nconst RegistrationForm = () => {\n  const [isPswdShown, setIsPswdShown] = useState(false);\n  const dispatch = useDispatch();\n  const [errorMessage, setErrorMessage] = useState('');\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          name: '',\n          email: '',\n          password: '',\n        }}\n        validationSchema={SignupSchema}\n        onSubmit={(values, actions) => {\n          dispatch(handleRegistration(values)).then(a => {\n            if (a?.type === 'users/signup/rejected') {\n              setErrorMessage(a?.payload);\n            }\n            console.log(errorMessage);\n          });\n          actions.resetForm();\n        }}\n      >\n        {({ handleSubmit, errors, touched }) => (\n          <Form className={s.loginForm}>\n            <Field\n              className={s.formInput}\n              type=\"name\"\n              name=\"name\"\n              title=\"Please enter your name or nickname'\"\n              placeholder=\"Name *\"\n              min-length=\"2\"\n              required\n              id=\"name\"\n            />\n            {errors.name && touched.name ? (\n              <div className={s.errorMessage}>* {errors.name}</div>\n            ) : null}\n            {(errorMessage !== '\"email\" must be a valid email' ||\n              errorMessage !== 'Email in use') &&\n            !touched.name ? (\n              <div className={s.errorMessage}>{errorMessage}</div>\n            ) : null}\n\n            <Field\n              className={s.formInput}\n              type=\"email\"\n              name=\"email\"\n              title=\"Please enter valid email address, for example  'example@gmail.com'\"\n              placeholder=\"Email *\"\n              min-length=\"6\"\n              required\n              id=\"email\"\n            />\n            {errors.email && touched.email ? (\n              <div className={s.errorMessage}>* {errors.email}</div>\n            ) : null}\n            {(errorMessage === '\"email\" must be a valid email' ||\n              errorMessage === 'Email in use') &&\n            !touched.email ? (\n              <div className={s.errorMessage}>{errorMessage}</div>\n            ) : null}\n\n            <Field\n              className={s.formInput + ' ' + s.passInput}\n              type={isPswdShown ? 'text' : 'password'}\n              name=\"password\"\n              title=\"Please enter your password. Minimum length 8 symbols\"\n              placeholder=\"Password *\"\n              min-length=\"8\"\n              required\n              id=\"password\"\n            />\n            <button\n              className={s.pswdVisBtn}\n              onClick={() => {\n                setIsPswdShown(!isPswdShown);\n              }}\n              type=\"button\"\n            >\n              <img\n                className={s.pswdBtnImg}\n                src={isPswdShown ? eyeOpened : eyeClosed}\n                alt=\"Button show/hide password\"\n              />\n            </button>\n            {errors.password && touched.password ? (\n              <div className={s.errorMessage}>* {errors.password}</div>\n            ) : null}\n            {errorMessage && errorMessage === 'Password is wrong' && !touched.password ? (\n              <div className={s.errorMessage}>{errorMessage}</div>\n            ) : null}\n\n            <div className={s.btnCont}>\n              <Button\n                isPrimaryButton={false}\n                text={'Register'}\n                width={182}\n                onClick={() => {\n                  handleSubmit();\n                }}\n              />\n              {/* <a className={s.googleBtn} href={`${REACT_APP_BACKEND_URL}/users/google`}>\n                <img className={s.googleLogo} src={GoogleLogo} alt=\"Google logo\" />\n              </a>\n              <a className={s.googleBtn} href={`${REACT_APP_BACKEND_URL}/users/facebook`}>\n                <img className={s.googleLogo} src={FacebookText} alt=\"Facebook logo\" />\n              </a> */}\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default RegistrationForm;\n","import s from './RegistrationPage.module.css';\nimport RegistrationForm from 'components/RegistrationForm/RegistrationForm';\nimport { getLoadingStatus, getRegistrationStatus, getUser } from 'redux/auth/auth-selector';\nimport { useSelector } from 'react-redux';\nimport { Button, Loader } from 'components';\nimport instance from 'services/api/auth';\nimport { useEffect, useState } from 'react';\nimport { toast } from 'react-toastify';\n\nconst RegistrationPage = () => {\n  const isLoading = useSelector(getLoadingStatus);\n  const registrationStatus = useSelector(getRegistrationStatus);\n  const user = useSelector(getUser);\n  const [block, setBlock] = useState(false);\n  const [sec, setSec] = useState(10);\n  const [text, setText] = useState('Сlick to resend');\n\n  const tick = () => {\n    if (sec <= 0) {\n      setText('Сlick to resend');\n      setBlock(false);\n      setSec(10);\n    } else {\n      setSec(sec - 1);\n      setText(sec);\n    }\n  };\n\n  useEffect(() => {\n    if (block) {\n      const timerID = setInterval(() => tick(), 1000);\n      return () => clearInterval(timerID);\n    }\n  });\n\n  const component = (\n    <>\n      {registrationStatus ? (\n        <>\n          <div className={s.infoContainer}>\n            <h3 className={s.title}>\n              {user.name}, thank you for your registration. We've sent you a verification email.\n            </h3>\n            <p className={s.text}>If you've not received this email</p>\n            <Button\n              isPrimaryButton={false}\n              text={`${text}`}\n              width={182}\n              isDisabled={block}\n              onClick={async () => {\n                try {\n                  const result = await instance.post('/users/verify', { email: user.email });\n                  setBlock(true);\n                  toast.success(result.data.message);\n                } catch (error) {\n                  console.log(error);\n                  toast.error(error.response?.data?.message);\n                }\n              }}\n            />\n          </div>\n        </>\n      ) : (\n        <>\n          <h3 className={s.title}>Register</h3>\n          <RegistrationForm />\n        </>\n      )}\n    </>\n  );\n\n  return (\n    <main>\n      <div className={s.container}>\n        {isLoading ? (\n          <div className={s.block}>\n            <Loader />\n          </div>\n        ) : (\n          component\n        )}\n      </div>\n    </main>\n  );\n};\n\nexport default RegistrationPage;\n"],"names":["SignupSchema","Yup","shape","name","min","required","email","password","_useState","useState","_useState2","_slicedToArray","isPswdShown","setIsPswdShown","dispatch","useDispatch","_useState3","_useState4","errorMessage","setErrorMessage","_jsx","_Fragment","children","Formik","initialValues","validationSchema","onSubmit","values","actions","handleRegistration","then","a","type","payload","console","log","resetForm","_ref","handleSubmit","errors","touched","_jsxs","Form","className","s","Field","title","placeholder","id","onClick","src","eyeOpened","eyeClosed","alt","Button","isPrimaryButton","text","width","isLoading","useSelector","getLoadingStatus","registrationStatus","getRegistrationStatus","user","getUser","block","setBlock","sec","setSec","_useState5","_useState6","setText","useEffect","timerID","setInterval","clearInterval","component","concat","isDisabled","_asyncToGenerator","_regeneratorRuntime","_callee","result","_error$response","_error$response$data","_context","prev","next","instance","sent","toast","data","message","t0","response","stop","RegistrationForm","Loader"],"sourceRoot":""}